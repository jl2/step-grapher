* step-grapher

** About

This is a Common Lisp package to graph the structure of a [[https://en.wikipedia.org/wiki/ISO_10303][STEP File]] using GraphViz.

It can be used from the Lisp REPL, or compiled into a standalone program.

** REPL Examples

First, clone the repo into you QuickLisp "local projects" directory, then load the `step-grapher` package:
#+begin_src lisp
  (ql:quickload :step-grapher)
#+end_src

#+RESULTS:
: T

Next call `sg:graph-step-file` using one of the included demo files:

#+begin_src lisp
  (sg:graph-step-file "freecad_fillet_extrude.stp" :skip-list nil)
#+end_src


The output should be something like this:

[[step-files/freecad_fillet_extrude.svg]]

`sg:graph-step-file` can take a full path to a STEP file, or a name relative to one of the directories listed in sg::*step-file-dirs*, which defaults to the `step-files` directory in the package.

By default several entity types are not shown in the graph, to avoid clutterin the output.  Use the :skip-list keyword parameter to control which entities are culled.  Use nil to show all entities. 

#+begin_src lisp
  (sg:graph-step-file "as1.stp" :output-type "svg" :skip-list nil)
#+end_src

** Standalone Example
First clone the repo and build using Make.  See `step-grapher --help` to see available command line arguments.

#+begin_src shell
  git clone https://github.com/jl2/step-grapher.git
  cd step-grapher
  make
  ./step-grapher --help
  ./step-grapher test1.stp
  ./step-grapher --no-skip as1.stp
#+end_src

By default several terminal entities are skipped to avoid cluttering the graph.  Use the --no-skip command line option to disable skipping them

** Example Graphs


[[step-files/as1.svg]]

[[step-files/test1.svg]]


** License
ISC

Copyright (c) 2024 Jeremiah LaRocco <jeremiah_larocco@fastmail.com>

